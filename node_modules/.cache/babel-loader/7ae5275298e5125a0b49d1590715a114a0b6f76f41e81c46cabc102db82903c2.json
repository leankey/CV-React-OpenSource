{"ast":null,"code":"var _jsxFileName = \"E:\\\\VSCodeProjects\\\\my-app\\\\src\\\\components\\\\ProgressBar.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProgressBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.progressBarRef = /*#__PURE__*/React.createRef();\n    this.animateProgressBar = this.animateProgressBar.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.state = {\n      animated: false\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n  handleScroll() {\n    if (!this.state.animated && this.isElementInView(this.progressBarRef.current)) {\n      this.setState({\n        animated: true\n      }, this.animateProgressBar);\n    }\n  }\n  isElementInView(element) {\n    const rect = element.getBoundingClientRect();\n    return rect.top >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight);\n  }\n  animateProgressBar() {\n    const {\n      percent\n    } = this.props;\n    let width = 0;\n    const animate = () => {\n      if (width >= parseFloat(percent)) {\n        cancelAnimationFrame(animationFrame);\n        return;\n      }\n      width++;\n      this.progressBarRef.current.style.width = `${width}%`;\n      animationFrame = requestAnimationFrame(animate);\n    };\n    let animationFrame = requestAnimationFrame(animate);\n  }\n  render() {\n    const {\n      title,\n      level\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"progress-bar-label\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress ${this.state.animated ? \"animated\" : \"\"}`,\n          style: {\n            width: \"0%\"\n          },\n          ref: this.progressBarRef,\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ProgressBar;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressBar","Component","constructor","props","progressBarRef","createRef","animateProgressBar","bind","handleScroll","state","animated","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","isElementInView","current","setState","element","rect","getBoundingClientRect","top","bottom","innerHeight","document","documentElement","clientHeight","percent","width","animate","parseFloat","cancelAnimationFrame","animationFrame","style","requestAnimationFrame","render","title","level","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref"],"sources":["E:/VSCodeProjects/my-app/src/components/ProgressBar.js"],"sourcesContent":["import React from \"react\";\r\n\r\nclass ProgressBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.progressBarRef = React.createRef();\r\n    this.animateProgressBar = this.animateProgressBar.bind(this);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n    this.state = {\r\n      animated: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  handleScroll() {\r\n    if (\r\n      !this.state.animated &&\r\n      this.isElementInView(this.progressBarRef.current)\r\n    ) {\r\n      this.setState({ animated: true }, this.animateProgressBar);\r\n    }\r\n  }\r\n\r\n  isElementInView(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return (\r\n      rect.top >= 0 &&\r\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight)\r\n    );\r\n  }\r\n\r\n  animateProgressBar() {\r\n    const { percent } = this.props;\r\n    let width = 0;\r\n    const animate = () => {\r\n      if (width >= parseFloat(percent)) {\r\n        cancelAnimationFrame(animationFrame);\r\n        return;\r\n      }\r\n      width++;\r\n      this.progressBarRef.current.style.width = `${width}%`;\r\n      animationFrame = requestAnimationFrame(animate);\r\n    };\r\n    let animationFrame = requestAnimationFrame(animate);\r\n  }\r\n\r\n  render() {\r\n    const { title, level } = this.props;\r\n    return (\r\n      <div>\r\n        <h4 className=\"progress-bar-label\">{title}</h4>\r\n        <div className=\"progress-bar\">\r\n          <div\r\n            className={`progress ${this.state.animated ? \"animated\" : \"\"}`}\r\n            style={{ width: \"0%\" }}\r\n            ref={this.progressBarRef}\r\n          >\r\n            {level}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}